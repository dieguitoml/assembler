type int x_t;
type bool flag_t;
type int[3] y_t;

struct Persona {
    int edad;
    bool activo;
};

class Cuenta {

    Cuenta(int m, int n){
	 this->m = m;
	 this->n = n;
	 return;
	}
	int calculaCuenta(){
	 int calculo = h*m/2;
	 return calculo;
	}
	int m;
	int n;
}

int suma(int a, int b) {
    return a + b;
}

void incrementar(int@ valor) {
    valor = valor + 1;
	return;
}

void inicializarArray(int@ arr[3]) {
    arr[0] = 10;
    arr[1] = 20;
    arr[2] = 30;
	return;
}

const int maximo = 100;
int contador = 0;

void imprimir() {
    cout(10 + 20);
	return;
}

void main() {
    int x;
    x = 5;

    int arr[3];
    inicializarArray(arr);

    Persona p;
    p.edad = 30;
    p.activo = true;

    Cuenta cuenta;
    cuenta.abierta = true;

    int resultado = suma(3, 4);

    int datos[3] = {1, 2, 3};
    int otro = datos[0];

    if (x > 0) {
        x = x - 1;
    } else {
        x = x + 1;
    }

    for (int i = 0; i < 10; i = i + 1) {
        if (i == 5) {
            break;
        }
    }

    while (x < 20) {
        x = x + 1;
    }

    switch (x) {
        case 1:
            x = x + 10;
        case 2:
            x = x + 20;
        default:
            x = x + 100;
    }

    x_t valor = new int;
    flag_t estado = new bool;
    Cuenta nueva = new Cuenta;

    int@ ptr = &x;
    @ptr = 42;

    this->campo = 123;
    this->sub->atributo = 456;

    incrementar(x);

    return x;
}
